<% layout("layouts/boilerplate")%>
<body>


   
    <!--filter div -->
<div id="filters">
  <% const tagsList = [
    { tag: "Trending", icon: "fa-fire" },
    { tag: "Rooms", icon: "fa-house" },
    { tag: "Iconic cities", icon: "fa-mountain-city" },
    { tag: "Mountains", icon: "fa-mountain" },
    { tag: "Castles", icon: "fa-fort-awesome" },
    { tag: "Beach side", icon: "fa-umbrella-beach" },
    { tag: "swimming pool", icon: "fa-person-swimming" },
    { tag: "Camping", icon: "fa-campground" },
    { tag: "Farms", icon: "fa-cow" }
  ]; %>

  <% tagsList.forEach(({ tag, icon }) => { %>
    <div class="filter">
      <a href="/listings?tag=<%= encodeURIComponent(tag) %>" style="text-decoration: none; color: inherit;">
        <div><i class="fa-solid <%= icon %>"></i></div>
        <p><%= tag %></p>
      </a>
    </div>
  <% }); %>
</div>


    </diV>

    <!-- Cluster Map Section -->
    <div class="row mb-4 mt-3">
        <div class="col-12">
            <h4>Explore Locations</h4>
            <div id="cluster-map" style="height: 400px;margin-left: 2rem; width: 95%; border-radius: 10px; box-shadow: 15px 15px 15px rgba(0,0,0,0.1);"></div>
        </div>
    </div>



    <!-- Listings Grid -->
    <div class="row row-cols-2 row-cols-md-3 g-4 g-md-5 ms-2 ms-md-4">
      <% for(let listing of allListings){ %>
        <div class="col">
          <a href="/listings/<%=listing._id%>" style="text-decoration: none; color: inherit;">
            <div class="card h-100 listing-card">
                <div class="card-style">
            <div class="card-img-container" style="position: relative;">
              <img src="<%=listing.image.url%>" class="card-img-top listing-img" alt="listing_image">
              <div class="card-img-overlay" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.3);"></div>
            </div>
            </div>

            <div class="card-body">
              <p class="card-text mt-2">
                <strong><%= listing.title %></strong><br>
                ‚Çπ<%= listing.price.toLocaleString("en-IN") %> /night
                <i class="taxInfo"> &nbsp; &nbsp;  +18% GST</i>
              </p>
            </div>
            </div>
          </a>
        </div>
      <% } %>
    </div>

    <!-- Hidden data for JavaScript -->
    <script type="application/json" id="listings-data">
        [
            <% allListings.forEach((listing, index) => { %>
                {
                    "id": "<%= listing._id %>",
                    "title": "<%= listing.title.replace(/"/g, '&quot;') %>",
                    "location": "<%= listing.location || '' %>",
                    "country": "<%= listing.country || '' %>",
                    "price": <%= listing.price || 0 %>,
                    "imageUrl": "<%= listing.image.url %>",
                    "coordinates": <%= listing.geometry && listing.geometry.coordinates ? JSON.stringify(listing.geometry.coordinates) : 'null' %>
                }<%= index < allListings.length - 1 ? ',' : '' %>
            <% }); %>
        ]
    </script>

    <!-- Cluster Map JavaScript -->
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            console.log('Initializing cluster map...');
            
            // Get listings data from JSON script tag
            try {
                const listingsDataElement = document.getElementById('listings-data');
                const listingsData = JSON.parse(listingsDataElement.textContent);
                console.log('Listings data loaded:', listingsData.length, 'listings');
                
                // Check if Leaflet is loaded
                if (typeof L === 'undefined') {
                    console.error('Leaflet not loaded');
                    document.getElementById('cluster-map').innerHTML = '<div style="padding: 20px; text-align: center;">‚ùå Map library not loaded</div>';
                    return;
                }
                
                // Initialize the cluster map
                const clusterMap = L.map('cluster-map').setView([20.5937, 78.9629], 5);

                // Add OpenStreetMap tile layer
                L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
                    maxZoom: 19,
                    attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
                }).addTo(clusterMap);

                // Array to store all markers for bounds fitting
                const allMarkersForBounds = [];
                let markersAdded = 0;

                // Add markers for all listings
                listingsData.forEach((listing, index) => {
                    if (listing.coordinates && 
                        Array.isArray(listing.coordinates) && 
                        listing.coordinates.length === 2 &&
                        listing.coordinates[0] !== 0 && 
                        listing.coordinates[1] !== 0) {
                        
                        try {
                            // Create custom icon
                            const customIcon = L.divIcon({
                                html: '<i class="fas fa-home" style="color: #e74c3c; font-size: 20px;"></i>',
                                iconSize: [25, 25],
                                className: 'custom-div-icon'
                            });

                            // Add marker [lat, lng]
                            const lat = listing.coordinates[1];
                            const lng = listing.coordinates[0];
                            
                            const marker = L.marker([lat, lng], { icon: customIcon }).addTo(clusterMap);

                            // Add to bounds array
                            allMarkersForBounds.push([lat, lng]);

                            // Create popup content
                            const popupContent = 
                                '<div style="text-align: center; min-width: 200px;">' +
                                '<img src="' + listing.imageUrl + '" style="width: 100%; height: 120px; object-fit: cover; border-radius: 8px; margin-bottom: 8px;" alt="' + listing.title + '">' +
                                '<h6 style="margin-bottom: 8px; color: #2c3e50;">' + listing.title + '</h6>' +
                                '<p style="margin-bottom: 5px; font-size: 14px;"><strong>' + (listing.location || 'Location not specified') + '</strong></p>' +
                                '<p style="margin: 0; font-size: 12px; color: #7f8c8d;">' + (listing.country || 'Country not specified') + '</p>' +
                                '<p style="margin: 8px 0; font-weight: bold; color: #27ae60;">‚Çπ' + listing.price.toLocaleString("en-IN") + '/night</p>' +
                                '<a href="/listings/' + listing.id + '" class="btn btn-primary btn-sm" style="margin-top: 8px;">View Details</a>' +
                                '</div>';

                            marker.bindPopup(popupContent);
                            markersAdded++;
                            
                            console.log('‚úÖ Marker added for:', listing.title);

                        } catch (error) {
                            console.error('‚ùå Error adding marker for listing:', listing.title, error);
                        }
                    }
                });

                // Fit map to show all markers if there are any
                if (allMarkersForBounds.length > 0) {
                    console.log('üìç Fitting bounds for', markersAdded, 'markers');
                    
                    const markersGroup = new L.featureGroup(
                        allMarkersForBounds.map(coords => L.marker(coords))
                    );
                    clusterMap.fitBounds(markersGroup.getBounds().pad(0.1));
                } else {
                    console.log('üìç No markers to display');
                    
                    // If no markers, show a message
                    document.getElementById('cluster-map').innerHTML = 
                        '<div style="display: flex; justify-content: center; align-items: center; height: 100%; background-color: #f8f9fa; border-radius: 10px;">' +
                        '<div style="text-align: center; color: #6c757d;">' +
                        '<i class="fas fa-map" style="font-size: 48px; margin-bottom: 16px;"></i>' +
                        '<h5>No locations to display</h5>' +
                        '<p>Create listings with locations to see them on the map!</p>' +
                        '<a href="/listings/new" class="btn btn-primary btn-sm mt-2">Create First Listing</a>' +
                        '</div>' +
                        '</div>';
                }

                console.log('‚úÖ Cluster map initialization complete! Added', markersAdded, 'markers');

            } catch (error) {
                console.error('‚ùå Error initializing cluster map:', error);
                document.getElementById('cluster-map').innerHTML = '<div style="padding: 20px; text-align: center; background: #ffebee;">‚ùå Error loading map: ' + error.message + '</div>';
            }
        });
    </script>
   
 
</body>
